events {
    worker_connections 1024; #max concurrent connections
}

http {

    include       mime.types;
    default_type  application/octet-stream;


    server {
        listen 8080; #entry global port
        server_name localhost;

        location /react/ {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /react/index.html;
        }
        
        location = /react {
            return 301 /react/;
        }

        location = / {
            return 302 /react/;
        }

        location /authenticate {    #authenticate route middleware : dispo uniquement interne 
            if ($request_method = OPTIONS) {    
                return 204;
            }
            internal;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_pass http://auth:3000/authenticate;
        }

        location /login {
            proxy_pass http://auth:3000/login;
        }

        location /register {
            proxy_pass http://auth:3000/register;
        }

        location /private {
            auth_request /authenticate; # verify authentification
            proxy_set_header Authorization $http_authorization;
            proxy_pass http://react:3000/;
        }
    }
}